services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot-app
    ports:
      - "8808:8808"
    volumes:
      - .:/app
      - ~/.m2:/root/.m2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/sale
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123456
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: sale
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  node:
    image: node:18  # 使用Node的官方开发镜像
    container_name: node-app
    working_dir: /usr/src/app
    volumes:
      - ./node-app/Chinese_deliver:/usr/src/app
      - /usr/src/app/node_modules
    command: bash -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    depends_on:
      - web

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  nginx:
    image: nginx:latest
    container_name: nginx
    platform: linux/arm64
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - node